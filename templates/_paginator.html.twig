{% import '_page.html.twig' as pagination %}

<div class="flex justify-center items-center mt-6">
    {% if paginator.pages > 1 %}
        {% if paginator.previousPage %}
            <a href="{{ path(path, { 'id': id, 'page': paginator.previous, 'search': searchQuery ? searchQuery|e : null }) }}"
               class="inline-block bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-500 transition duration-200 ease-in-out mr-2">
                Previous
            </a>
        {% endif %}

        {# number of beginning pages that are always visible based on EDGE_PAGES constant #}

        {% for page in paginator.startEdgeRange %}
            {{ pagination.pageLink(path, id, page, searchQuery, paginator.page) }}
        {% endfor %}

        {# separator for preceding pages #}

        {% if paginator.precedingPages %}
            <span class="text-xl mx-2">. . .</span>
        {% endif %}


        {# range of pages in between, calculated based on number of pages at the edges #}

        {% for page in paginator.range %}
            {{ pagination.pageLink(path, id, page, searchQuery, paginator.page) }}
        {% endfor %}

        {# separator for following pages #}

        {% if paginator.followupPages %}
            <span class="text-xl mx-2">. . .</span>
        {% endif %}

        {# number of end pages that are always visible based on EDGE_PAGES constant #}

        {% for page in paginator.endEdgeRange %}
            {{ pagination.pageLink(path, id, page, searchQuery, paginator.page) }}
        {% endfor %}

        {% if paginator.nextPage %}
            <a href="{{ path(path, { 'id': id, 'page': paginator.next, 'search': searchQuery ? searchQuery|e : null }) }}"
               class="inline-block bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-500 transition duration-200 ease-in-out ml-2">
                Next
            </a>
        {% endif %}
    {% endif %}
</div>